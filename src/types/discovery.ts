// src/types/discovery.ts

// Represents the AI-generated insights from the initial discovery process
export interface DiscoveryResponse {
  current_state: {
    barrier_themes?: string[]; // Insightful themes that the AI has identified from the prospect's current situation and barriers
    emotions: string[]; // Emotions that the AI has identified from the prospect's current situation
    financial_risk?: string; // Financial risk and urgency (based on date that barriers must be removed) identified by the AI
  };
  future_state: {
    outcome_themes?: string[]; // Insightful themes that the AI has identified from the prospect's future desired outcomes
    emotions: string[]; // Emotions that the AI has identified from the prospect's future desired outcomes
    financial_impact?: string; // Potential financial impact once the barriers are removed
  };
}

export interface Solution {
  id: string;
  name: string;
  // Add other required properties
}

// Comprehensive information about the prospect
export interface ProspectInfo {
  firstName: string;
  lastName: string;
  email: string;
  companyName: string;
  clientId?: string;
  userID: string;         // Our internal unique identifier
  clerkUserId: string;    // Clerk's user identifier
  stripeCustomerId?: string; // Future Stripe customer ID
  industryType?: string;
  companySize?: string;
  urgencyLevel?: 'low' | 'medium' | 'high';
}

// Detailed solution response with rich, HTML-formatted content
// In discovery.ts
export interface SolutionResponse {
  solution_description: {
    transformation_journey: {
      current_situation: string;
      challenges: string[];
      vision: string;
    };
    solution_recommendation: {
      overview: string;
      key_components: string[];
      approach: string[];
    };
    value_proposition: {
      business_outcomes: string;
      personal_benefits: string[];
      risk_mitigation: string[];
    };
    investment_summary: {
      pricing_model: string;
      roi_analysis: string;
      timeline: string[];
    };
  };
  testimonials: {
    caseSituation1: string;
    caseSolution1: string[];
    caseValue1: string[];
    caseSituation2: string;
    caseSolution2: string[];
    caseValue2: string[];
  };
  sessionId: string;
}

// Comprehensive state representing the entire discovery and solution process
export interface DiscoveryState {
  startTime?: string;
  currentState: {
    barriers: string[];        // Specific barriers identified
    financialImpact: string;   // Financial implications of current barriers
    targetDate: string;        // Date by which barriers need to be addressed
    emotionalImpact: string;   // Emotional toll of current challenges
  };
  futureState: {
    desiredOutcomes: string[]; // Specific outcomes the prospect wants to achieve
    financialImpact: string;   // Anticipated financial improvement
    emotionalRelief: string;   // Expected emotional benefits
  };
  stage: number;               // Current stage in the discovery process
  prospectInfo: ProspectInfo;  // Detailed prospect information
  sessionName: string;         // Name or identifier for the discovery session
  sessionId?: string;          // Unique identifier for the session
  aiSummary: {
    currentState: {
      barrierThemes: string[];     // AI-generated barrier themes
      emotionalThemes: string[];   // AI-identified emotional themes
      urgencyStatement: string;    // AI's assessment of urgency
    };
    futureState: {
      outcomeThemes: string[];         // AI-generated outcome themes
      emotionalImpactThemes: string[]; // AI-identified future emotional themes
      financialImpactStatement: string;// AI's assessment of financial potential
    };
  };
  solution?: string;           // User-selected solution type
  solutionResponse?: SolutionResponse; // Detailed solution generated by AI
  showError?: boolean;         // Flag to indicate if an error should be displayed
}

// Represents a persistent discovery session with additional metadata
export interface DiscoverySession extends Omit<DiscoveryState, 'stage'> {
  id: string;
  status: 'draft' | 'in_progress' | 'completed';
  createdAt: string;
  updatedAt: string;
  userID: string;         // Our internal unique identifier
  clerkUserId: string;    // Clerk's user identifier
  stripeCustomerId?: string; // Future Stripe customer ID
  companyId: string;
}